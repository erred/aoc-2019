package main

import (
	"testing"
)

func TestQ1(t *testing.T) {
	tcs := []struct {
		in      string
		x, y, c int
	}{
		{
			`.#..#
.....
#####
....#
...##`,
			3, 4, 7,
		}, {
			`......#.#.
#..#.#....
..#######.
.#.#.###..
.#..#.....
..#....#.#
#..#....#.
.##.#..###
##...#..#.
.#....####`,
			5, 8, 33,
		}, {
			`#.#...#.#.
.###....#.
.#....#...
##.#.#.#.#
....#.#.#.
.##..###.#
..#...##..
..##....##
......#...
.####.###.`,
			1, 2, 35,
		}, {
			`.#..#..###
####.###.#
....###.#.
..###.##.#
##.##.#.#.
....###..#
..#.#..#.#
#..#.#.###
.##...##.#
.....#.#..`,
			6, 3, 41,
		}, {
			`.#..##.###...#######
##.############..##.
.#.######.########.#
.###.#######.####.#.
#####.##.#.##.###.##
..#####..#.#########
####################
#.####....###.#.#.##
##.#################
#####.##.###..####..
..######..##.#######
####.##.####...##..#
.#####..#.######.###
##...#.##########...
#.##########.#######
.####.#.###.###.#.##
....##.##.###..#####
.#.#.###########.###
#.#.#.#####.####.###
###.##.####.##.#..##`,
			11, 13, 210,
		},
	}

	for i, tc := range tcs {
		x, y, c := Q1(tc.in)
		if x != tc.x || y != tc.y || tc.c != tc.c {
			t.Errorf("TestQ1 %v: expected %v at %v,%v got %v at %v,%v\n", i, tc.c, tc.x, tc.y, c, x, y)
		}
	}
}

func TestQ2(t *testing.T) {
	tcs := []struct {
		in  string
		p   point
		t   int
		out point
	}{
		{
			square, point{1, 1}, 1, point{1, 0},
		}, {
			square, point{1, 1}, 2, point{2, 0},
		}, {
			square, point{1, 1}, 3, point{2, 1},
		}, {
			square, point{1, 1}, 4, point{2, 2},
		}, {
			square, point{1, 1}, 5, point{1, 2},
		}, {
			square, point{1, 1}, 6, point{0, 2},
		}, {
			square, point{1, 1}, 7, point{0, 1},
		}, {
			square, point{1, 1}, 8, point{0, 0},
		}, {
			`.#....#####...#..
##...##.#####..##
##...#...#.#####.
..#.....X...###..
..#.#.....#....##`,
			point{8, 3},
			36,
			point{14, 3},
		}, {
			`.#....#####...#..
##...##.#####..##
##...#...#.#####.
..#.....X...###..
..#.#.....#....##`,
			point{8, 3},
			1,
			point{8, 1},
		}, {
			big,
			point{11, 13},
			1,
			point{11, 12},
		}, {
			big,
			point{11, 13},
			2,
			point{12, 1},
		}, {
			big,
			point{11, 13},
			3,
			point{12, 2},
		}, {
			big,
			point{11, 13},
			10,
			point{12, 8},
		}, {
			big,
			point{11, 13},
			20,
			point{16, 0},
		}, {
			big,
			point{11, 13},
			50,
			point{16, 9},
		}, {
			big,
			point{11, 13},
			199,
			point{9, 6},
		}, {
			big,
			point{11, 13},
			200,
			point{8, 2},
		}, {
			big,
			point{11, 13},
			201,
			point{10, 9},
		}, {
			big,
			point{11, 13},
			299,
			point{11, 1},
		},
	}
	for i, tc := range tcs {
		x, y := Q2(tc.in, tc.p, tc.t)
		if x != tc.out.x || y != tc.out.y {
			t.Errorf("TestQ2 %v: expected %v,%v got %v,%v\n", i, tc.out.x, tc.out.y, x, y)
		}
	}
}

var (
	square string = `###
###
###`
	big string = `.#..##.###...#######
##.############..##.
.#.######.########.#
.###.#######.####.#.
#####.##.#.##.###.##
..#####..#.#########
####################
#.####....###.#.#.##
##.#################
#####.##.###..####..
..######..##.#######
####.##.####...##..#
.#####..#.######.###
##...#.##########...
#.##########.#######
.####.#.###.###.#.##
....##.##.###..#####
.#.#.###########.###
#.#.#.#####.####.###
###.##.####.##.#..##`
)
